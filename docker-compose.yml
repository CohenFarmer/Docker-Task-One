services:
  #frontend service
  frontend:
    build:
      #build an image using Dockerfile.frontend
      context: .
      dockerfile: Dockerfile.frontend
      args:
        REACT_APP_YOUR_HOSTNAME: /api
    container_name: mern-frontend
    expose:
      - "80" #port 80 is available to other services in the docker network
    networks:
      - mern-net #joins mern-net network

  backend:
    build:
      #build an image using Dockerfile.backend
      context: .
      dockerfile: Dockerfile.backend
    container_name: mern-backend
    #connects to the database and listens on port 5000
    environment:
      - ATLAS_URI=mongodb://mongo:27017/employees
      - PORT=5000
    #depends on mongo (mongo container needs to be started before backend)
    depends_on:
      - mongo
    expose:
      - "5000" #port 5000 is available to other services in the docker network
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:5000/').then(r=>{if(!r.ok)process.exit(1)}).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 5
    #joins mern-net network
    networks:
      - mern-net

  mongo:
    image: mongo:6 #use mongo:6 image
    container_name: mern-mongo
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mern-net #joins mern-net network

  mongo-express:
    image: mongo-express 
    container_name: mern-mongo-express
    environment:
      #configures target MongoDB instance and authentication
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    ports:
      - "8081:8081"  #external access
    depends_on:
      - mongo #starts after mongo
    networks:
      - mern-net

  nginx:
    image: nginx:alpine
    container_name: mern-nginx
    ports:
      - "80:80"
      - "443:443"
      #redirects http to https (80) to (443)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs  
      
    depends_on:
      #frontend and backend containers must be running beforehand
      - frontend
      - backend
    networks:
      - mern-net

volumes:
  mongo-data:

networks:
  mern-net:
    driver: bridge